<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[3-sum]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/04/05/3-sum/</url>
      <content type="html"><![CDATA[<p>ÁªôÂÆö‰∏Ä‰∏™Êï∞ÁªÑÔºåÊ±ÇÂíå‰∏∫0ÁöÑ‰∏â‰∏™Êï∞(a+b+c=0)<br>‚Ä¢ (a, b, c) ÈùûÈôçÂ∫è (ie, a ‚â§ b ‚â§ c)<br>‚Ä¢ ‰æãÂ¶ÇÔºöS = {-1 0 1 2 -1 -4}.<br>  Ëß£‰∏∫Ôºö(-1, 0, 1)<br>        (-1, -1, 2)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OSXÂÆâË£Öqemu]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/04/05/OSX%E5%AE%89%E8%A3%85qemu/</url>
      <content type="html"><![CDATA[<p><code>sudo brew install qemu</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">==&gt; Installing dependencies for qemu: jpeg, libpng, libtasn1, gmp, nettle</span><br><span class="line">==&gt; Installing qemu dependency: jpeg</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/jpeg-8d.el_capitan.bottle.2</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring jpeg-8d.el_capitan.bottle.2.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/jconfig.h</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link jpeg</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/jpeg/8d: 18 files, 712.4K</span><br><span class="line">==&gt; Installing qemu dependency: libpng</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/libpng-1.6.21.el_capitan.bo</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring libpng-1.6.21.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/libpng16</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link libpng</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/libpng/1.6.21: 17 files, 1.2M</span><br><span class="line">==&gt; Installing qemu dependency: libtasn1</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/libtasn1-4.7.el_capitan.bot</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring libtasn1-4.7.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/libtasn1.h</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link libtasn1</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/libtasn1/4.7: 57 files, 434.1K</span><br><span class="line">==&gt; Installing qemu dependency: gmp</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/gmp-6.1.0.el_capitan.bottle</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring gmp-6.1.0.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/gmp.h</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link gmp</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/gmp/6.1.0: 15 files, 3.2M</span><br><span class="line">==&gt; Installing qemu dependency: nettle</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/nettle-3.2.el_capitan.bottl</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring nettle-3.2.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/nettle</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link nettle</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/nettle/3.2: 75 files, 1.9M</span><br><span class="line">==&gt; Installing qemu dependency: gnutls</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/gnutls-3.4.10.el_capitan.bo</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring gnutls-3.4.10.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/gnutls</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link gnutls</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/gnutls/3.4.10: 1,094 files, 6.8M</span><br><span class="line">==&gt; Installing qemu dependency: gettext</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/gettext-0.19.7.el_capitan.b</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring gettext-0.19.7.el_capitan.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">This formula is keg-only, which means it was not symlinked into /usr/local.</span><br><span class="line"></span><br><span class="line">OS X provides the BSD gettext library and some software gets confused if both are in the library path.</span><br><span class="line"></span><br><span class="line">Generally there are no consequences of this for you. If you build your</span><br><span class="line">own software and it requires this formula, you&apos;ll need to add to your</span><br><span class="line">build variables:</span><br><span class="line"></span><br><span class="line">    LDFLAGS:  -L/usr/local/opt/gettext/lib</span><br><span class="line">    CPPFLAGS: -I/usr/local/opt/gettext/include</span><br><span class="line"></span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/gettext/0.19.7: 1,929 files, 16.6M</span><br><span class="line">==&gt; Installing qemu dependency: libffi</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/libffi-3.0.13.el_capitan.bo</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring libffi-3.0.13.el_capitan.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">This formula is keg-only, which means it was not symlinked into /usr/local.</span><br><span class="line"></span><br><span class="line">Some formulae require a newer version of libffi.</span><br><span class="line"></span><br><span class="line">Generally there are no consequences of this for you. If you build your</span><br><span class="line">own software and it requires this formula, you&apos;ll need to add to your</span><br><span class="line">build variables:</span><br><span class="line"></span><br><span class="line">    LDFLAGS:  -L/usr/local/opt/libffi/lib</span><br><span class="line"></span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/libffi/3.0.13: 14 files, 373.2K</span><br><span class="line">==&gt; Installing qemu dependency: glib</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/glib-2.46.2.el_capitan.bott</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring glib-2.46.2.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/gio-unix-2.0</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link glib</span><br><span class="line">Warning: The post-install step did not complete successfully</span><br><span class="line">You can try again using `brew postinstall glib`</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/glib/2.46.2: 421 files, 22.3M</span><br><span class="line">==&gt; Installing qemu dependency: pixman</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/pixman-0.34.0.el_capitan.bo</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring pixman-0.34.0.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/local</span><br><span class="line">Could not symlink include/pixman-1</span><br><span class="line">/usr/local/include is not writable.</span><br><span class="line"></span><br><span class="line">You can try again using:</span><br><span class="line">  brew link pixman</span><br><span class="line">==&gt; Summary</span><br><span class="line">üç∫  /usr/local/Cellar/pixman/0.34.0: 11 files, 1.2M</span><br><span class="line">==&gt; Installing qemu</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/qemu-2.5.0_2.el_capitan.bot</span><br><span class="line">########################################                                  56.1%m######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring qemu-2.5.0_2.el_capitan.bottle.tar.gz</span><br><span class="line">üç∫  /usr/local/Cellar/qemu/2.5.0_2: 125 files, 118.3M</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ë∞ÉËØïÁöÑÊäÄÂ∑ß]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/21/%E8%B0%83%E8%AF%95%E7%9A%84%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<h1 id="‰ΩøÁî®GDBË∞ÉËØïÂ∑•ÂÖ∑"><a href="#‰ΩøÁî®GDBË∞ÉËØïÂ∑•ÂÖ∑" class="headerlink" title="‰ΩøÁî®GDBË∞ÉËØïÂ∑•ÂÖ∑"></a>‰ΩøÁî®GDBË∞ÉËØïÂ∑•ÂÖ∑</h1><h2 id="Â†ÜÊ†àÂ∏ß"><a href="#Â†ÜÊ†àÂ∏ß" class="headerlink" title="Â†ÜÊ†àÂ∏ß"></a>Â†ÜÊ†àÂ∏ß</h2><h1 id="‰ΩøÁî®valgrindÊ£ÄÊü•ÂÜÖÂ≠ò‰ΩøÁî®ÈîôËØØ"><a href="#‰ΩøÁî®valgrindÊ£ÄÊü•ÂÜÖÂ≠ò‰ΩøÁî®ÈîôËØØ" class="headerlink" title="‰ΩøÁî®valgrindÊ£ÄÊü•ÂÜÖÂ≠ò‰ΩøÁî®ÈîôËØØ"></a>‰ΩøÁî®valgrindÊ£ÄÊü•ÂÜÖÂ≠ò‰ΩøÁî®ÈîôËØØ</h1><p><code>valgrind your_program</code></p>
<h1 id="ÂçïÂÖÉÊµãËØï"><a href="#ÂçïÂÖÉÊµãËØï" class="headerlink" title="ÂçïÂÖÉÊµãËØï"></a>ÂçïÂÖÉÊµãËØï</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[C‰∏≠ÁöÑÁéØÂ¢ÉÂèòÈáè]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/20/C%E4%B8%AD%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<h2 id="‰ΩøÁî®getenv"><a href="#‰ΩøÁî®getenv" class="headerlink" title="‰ΩøÁî®getenv"></a>‰ΩøÁî®getenv</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdlib.h&gt; //getenv, atoi</span><br><span class="line">#include &lt;stdio.h&gt;  //printf</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    char *repstext = getenv(&quot;reps&quot;);</span><br><span class="line">    int reps = repstext ? atoi(repstext) : 10;</span><br><span class="line"></span><br><span class="line">    char *msg = getenv(&quot;msg&quot;);</span><br><span class="line">    if (!msg) msg = &quot;Hello.&quot;;</span><br><span class="line"></span><br><span class="line">    for (int i=0; i&lt; reps; i++)</span><br><span class="line">        printf(&quot;%s\n&quot;, msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>‰ΩøÁî®<code>reps=10 msg=&quot;Ha&quot; ./getenv</code>‰º†ÈÄíÁéØÂ¢ÉÂèòÈáè„ÄÇ</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[C/C++ÁºñËØëÁéØÂ¢ÉÊê≠Âª∫]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/20/C-C-%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="ÂåÖÁÆ°ÁêÜÂô®"><a href="#ÂåÖÁÆ°ÁêÜÂô®" class="headerlink" title="ÂåÖÁÆ°ÁêÜÂô®"></a>ÂåÖÁÆ°ÁêÜÂô®</h1><h2 id="ÁºñËØëÂô®"><a href="#ÁºñËØëÂô®" class="headerlink" title="ÁºñËØëÂô®"></a>ÁºñËØëÂô®</h2><p><code>gcc</code><br><code>Clang</code></p>
<h2 id="Ë∞ÉËØïÂô®"><a href="#Ë∞ÉËØïÂô®" class="headerlink" title="Ë∞ÉËØïÂô®"></a>Ë∞ÉËØïÂô®</h2><p><code>gdb</code></p>
<h2 id="Valgrind"><a href="#Valgrind" class="headerlink" title="Valgrind"></a>Valgrind</h2><p>ÊµãËØïÂÜÖÂ≠ò‰ΩøÁî®ÈîôËØØ</p>
<h2 id="gprof"><a href="#gprof" class="headerlink" title="gprof"></a>gprof</h2><p>‰ª£Á†ÅÂâñÊûêÂô®</p>
<h2 id="make"><a href="#make" class="headerlink" title="make"></a>make</h2><h2 id="pkg-config"><a href="#pkg-config" class="headerlink" title="pkg-config"></a>pkg-config</h2><p>pkg-configÊòØÂêëÁ®ãÂ∫èÊèê‰æõÁõ∏Â∫îÂ∫ìÁöÑË∑ØÂæÑ„ÄÅÁâàÊú¨Âè∑Á≠â‰ø°ÊÅØÁöÑÁ®ãÂ∫è„ÄÇ<br>Â¶ÇÔºö<br>$pkg-config ‚Äìlibs ‚Äìcflags opencv<br>‰ºöÊòæÁ§∫Â¶Ç‰∏ã‰ø°ÊÅØÔºö<br>-I/usr/include/opencv -lcxcore -lcv -lhighgui -lcvaux<br>ÂæóÂà∞ÁöÑÊòØÁî®gccÁºñËØëËøûÊé•Êó∂CFLAGSÁöÑÂèÇÊï∞„ÄÇÂõ†Ê≠§ÂΩìÊàë‰ª¨ÈúÄË¶ÅÁºñËØëËøûÊé•Êüê‰∏™Â∫ìÊó∂ÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÊää‰∏äÈù¢ÈÇ£Ë°åÂä†ÂÖ•gcc ÁöÑÂèÇÊï∞ÈáåÈù¢Âç≥ÂèØ„ÄÇËøô‰πüÊòØconfigureÁöÑ‰ΩúÁî®ÔºåÂÆÉ‰ºöÊ£ÄÊü•‰Ω†ÈúÄË¶ÅÁöÑÂåÖÔºå‰∫ßÁîüÁõ∏Â∫îÁöÑ‰ø°ÊÅØ„ÄÇ<br>ÈÇ£pkg-config‰ªéÂì™ÂÑøÁü•ÈÅìËøô‰∫õ‰ø°ÊÅØÁöÑÂë¢ÔºüÂÆÉÊòØ‰ªéÂåÖÂêç‰∏∫xxx.pcËøô‰∏™Êñá‰ª∂‰∏≠Êü•ÊâæÂà∞ÁöÑ„ÄÇÊãø‰∏äÈù¢ÈÇ£‰∏™‰æãÂ≠êËØ¥ÔºåÂÆÉÊòØ‰ªéopencv.pcËøô‰∏™Êñá‰ª∂‰∏≠Êü•Áü•ÁöÑ„ÄÇ<br>ÈÇ£pkg-config ÂèàÊÄé‰πà‰ºöÁü•ÈÅìopencv.pcËøô‰∏™Êñá‰ª∂Âë¢Ôºü‰∏ãÈù¢Êàë‰ª¨Áúã‰∏Ä‰∏ãpkg-configÊòØÊÄéÊ†∑Â∑•‰ΩúÁöÑ„ÄÇ<br>Áº∫ÁúÅÊÉÖÂÜµ‰∏ãÔºåpkg-configÈ¶ñÂÖàÂú®prefix/lib/pkgconfig/‰∏≠Êü•ÊâæÁõ∏ÂÖ≥ÂåÖÔºàË≠¨Â¶ÇopencvÔºâÂØπÂ∫îÁöÑÁõ∏Â∫îÁöÑÊñá‰ª∂Ôºàopencv.pcÔºâ„ÄÇÂú®linux‰∏ä‰∏äËø∞Ë∑ØÂæÑÂêç‰∏∫ /usr/lib/pkconfig/„ÄÇËã•ÊòØÊ≤°ÊúâÊâæÂà∞ÔºåÂÆÉ‰πü‰ºöÂà∞PKG_CONFIG_PATHËøô‰∏™ÁéØÂ¢ÉÂèòÈáèÊâÄÊåáÂÆöÁöÑË∑ØÂæÑ‰∏ãÂéªÊâæ„ÄÇËã•ÊòØÊ≤°ÊúâÊâæÂà∞ÔºåÂÆÉÂ∞±‰ºöÊä•ÈîôÔºå‰æãÂ¶ÇÔºö<br><code>Package opencv was not found in the pkg-config search path.
Perhaps you should add the directory containing</code>opencv.pc‚Äô<br>to the PKG_CONFIG_PATH environment variable<br>No package ‚Äòopencv‚Äô found<br>`</p>
<p>ÂØªÊâæÂ∫ìÁöÑÂ∑•ÂÖ∑Ôºå‰ΩøÁî®ËßÅ‰∏ãÈù¢Â∫ìÊñá‰ª∂ÁöÑË∑ØÂæÑ„ÄÇ</p>
<h2 id="‰∫ßÁîüÊñáÊ°£ÁöÑÂ∑•ÂÖ∑"><a href="#‰∫ßÁîüÊñáÊ°£ÁöÑÂ∑•ÂÖ∑" class="headerlink" title="‰∫ßÁîüÊñáÊ°£ÁöÑÂ∑•ÂÖ∑"></a>‰∫ßÁîüÊñáÊ°£ÁöÑÂ∑•ÂÖ∑</h2><h2 id="ÁºñËæëÂô®ÁöÑÈÄâÊã©"><a href="#ÁºñËæëÂô®ÁöÑÈÄâÊã©" class="headerlink" title="ÁºñËæëÂô®ÁöÑÈÄâÊã©"></a>ÁºñËæëÂô®ÁöÑÈÄâÊã©</h2><p><code>Emacs</code><br><code>vim</code><br><code>Kate</code><br><code>nano</code></p>
<h2 id="‰∏Ä‰∫õIDEÁöÑÈÄâÊã©"><a href="#‰∏Ä‰∫õIDEÁöÑÈÄâÊã©" class="headerlink" title="‰∏Ä‰∫õIDEÁöÑÈÄâÊã©"></a>‰∏Ä‰∫õIDEÁöÑÈÄâÊã©</h2><h2 id="Autotools"><a href="#Autotools" class="headerlink" title="Autotools"></a>Autotools</h2><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h2 id="shellÁöÑÊõø‰ª£ÂìÅ"><a href="#shellÁöÑÊõø‰ª£ÂìÅ" class="headerlink" title="shellÁöÑÊõø‰ª£ÂìÅ"></a>shellÁöÑÊõø‰ª£ÂìÅ</h2><h1 id="Â∏∏Áî®ÁöÑÁºñËØëÂô®ÈÄâÈ°π"><a href="#Â∏∏Áî®ÁöÑÁºñËØëÂô®ÈÄâÈ°π" class="headerlink" title="Â∏∏Áî®ÁöÑÁºñËØëÂô®ÈÄâÈ°π"></a>Â∏∏Áî®ÁöÑÁºñËØëÂô®ÈÄâÈ°π</h1><p><code>-g</code> - Âä†ÂÖ•Ë∞ÉËØïÁ¨¶Âè∑<br><code>-std=gnu11</code> - C11Ê†áÂáÜ<br><code>-O2</code> - ‰ºòÂåñÁ≠âÁ∫ß<br><code>-Wall</code> - Ê∑ªÂä†ÁºñËØëÂô®Ë≠¶Âëä</p>
<h1 id="Â∫ìÁöÑË∑ØÂæÑ"><a href="#Â∫ìÁöÑË∑ØÂæÑ" class="headerlink" title="Â∫ìÁöÑË∑ØÂæÑ"></a>Â∫ìÁöÑË∑ØÂæÑ</h1><p>CÁ®ãÂ∫èËÆæËÆ°Êó∂ÔºåÂ∏∏Â∏∏ÈÅáÂà∞Êâæ‰∏çÂà∞Ë∑ØÂæÑÁöÑÈóÆÈ¢ò„ÄÇ<br>ÂØπË∑ØÂæÑÁöÑÁêÜËß£ÔºåÊúâÂä©‰∫éÈóÆÈ¢òÁöÑÊéíÊü•„ÄÇ</p>
<h2 id="Â∫ìÊñá‰ª∂Âú®Âì™Èáå"><a href="#Â∫ìÊñá‰ª∂Âú®Âì™Èáå" class="headerlink" title="Â∫ìÊñá‰ª∂Âú®Âì™Èáå"></a>Â∫ìÊñá‰ª∂Âú®Âì™Èáå</h2><p>ÂÖ∏ÂûãÁöÑÊÉÖÂÜµ‰∏ãÔºåÂ∫ìÂ≠òÊîæÁöÑÂú∞ÊñπËá≥Â∞ëÊúâ‰∏â‰∏™Ôºö<br>1„ÄÅÊìç‰ΩúÁ≥ªÁªüÈ¢ÑÂÆö‰πâÁöÑÂÆâË£ÖÂ∫ìÊñá‰ª∂ÁöÑÁõÆÂΩï<br>2„ÄÅÊú¨Âú∞Á≥ªÁªüÁÆ°ÁêÜÂëòÁöÑÂ∫ìÂÆâË£ÖÁõÆÂΩïÔºå‰∏ç‰ºöË¢´Êìç‰ΩúÁ≥ªÁªüÁöÑÊõ¥Êñ∞Ë¶ÜÁõñ<br>3„ÄÅÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãÁî®Êà∑Ê≤°ÊúâËÆøÈóÆ‰∏Ä‰∫õ‰ΩçÁΩÆÁöÑÊùÉÂà©ÔºåÊâÄ‰ª•Â∞Ü‰∏Ä‰∫õÂ∫ìÊñá‰ª∂Â≠òÊîæÁùÄÁî®Êà∑‰∏ªÁõÆÂΩï‰∏ã<br><code>‰æãÂ≠êÔºö</code><br>ÂÅáÂ¶ÇÂêç‰∏∫LibusefulÁöÑÂ∫ìÂÆâË£ÖÂú®<code>/usr/local/</code>ÁõÆÂΩï‰∏ãÔºå‰ª£Á†ÅÈáåÂ∑≤ÁªèÂåÖÂê´‰∫ÜÂ§¥Êñá‰ª∂<code>#include &lt;useful.h&gt;</code>„ÄÇÂàôÂèØ‰ª•Áî®‰ª•‰∏ãÂëΩ‰ª§Ôºö<br><code>gcc -I/usr/local/include use_useful.c -o use_useful -L/usr/local/lib -luseful</code><br>‚Ä¢ -I ÊåáÂÆöÊêúÁ¥¢Â§¥Êñá‰ª∂ÁöÑË∑ØÂæÑ<br>‚Ä¢ -L ÊåáÂÆöÂ∫ìÁöÑÊêúÁ¥¢ËåÉÂõ¥<br>‚Ä¢ Ê≥®ÊÑèÂ∫ìÁöÑÈ°∫Â∫èÔºöÂ¶ÇÊûúspecific.o‰æùËµñ‰∫éLibbroadÂ∫ìÔºåLibbroad‰æùËµñ‰∫éLibgeneralÔºåÂàôÂ∫ìÁöÑÈ°∫Â∫èÈÄöÂ∏∏‰∏∫<code>gcc specific.o -lbroad -lgeneral</code>Êâç‰ºöÊàêÂäü„ÄÇ</p>
<h2 id="Â∫ìÊñá‰ª∂ÁöÑÊü•Êâæ"><a href="#Â∫ìÊñá‰ª∂ÁöÑÊü•Êâæ" class="headerlink" title="Â∫ìÊñá‰ª∂ÁöÑÊü•Êâæ"></a>Â∫ìÊñá‰ª∂ÁöÑÊü•Êâæ</h2><p>ÊêúÁ¥¢Â∫ìÁöÑÂëΩ‰ª§ÔºöÔºàPOSIXÁéØÂ¢ÉÔºâ<br><code>find /usr -name &#39;libuseful*&#39;</code><br>‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÂ¶ÇÊûúÂ∫ìÁöÑÁõÆÊ†áÊñá‰ª∂Âú®<code>/somepath/lib</code>ÔºåÈÇ£‰πàÂØπÂ∫îÁöÑÂ§¥Êñá‰ª∂‰∏ÄÂÆöÂú®<code>/somepath/include</code><br>Êü•ÊâæÂ∫ìÁöÑÂ∑•ÂÖ∑<code>pkg-config</code><br><code>pkg-config --libs libxml-2.0</code> ÂæóÂà∞ËæìÂá∫Ôºö<code>-lxml2</code><br><code>pkg-config --cflags libxml-2.0</code> ÂæóÂà∞ËæìÂá∫Ôºö<code>-I/usr/include/libxml2</code><br>Âç≥ÂæóÂà∞ÁöÑÊòØÁºñËØëLibXML2ÊâÄÈúÄË¶ÅÁöÑÊâÄÊúâÈÄâÈ°π„ÄÇ<br>Âú®shell‰∏≠ÔºåÂΩìÊääÂëΩ‰ª§Ë°åÁî®ÂèçÂºïÂè∑ÂåÖÂõ¥Êó∂ÔºåËøô‰∏™ÂëΩ‰ª§Ë°åÁöÑÂèçÂºïÂè∑ÈÉ®ÂàÜ‰ºöË¢´ÂÖ∂Ëá™Ë∫´ÁöÑËæìÂá∫‰ª£Êõø„ÄÇ<br>ÊïÖËæìÂÖ•Ôºö<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc `pkg-config --cflags --libs libxml-2.0` -o specific specific.c</span><br></pre></td></tr></table></figure></p>
<p>Á≠â‰ª∑‰∫éÔºö<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -I/usr/include/libxml2 -lxml2 -o specific specific.c</span><br></pre></td></tr></table></figure></p>
<h2 id="Âú®ÂëΩ‰ª§Ë°åÈáåÂåÖÂê´Â§¥Êñá‰ª∂"><a href="#Âú®ÂëΩ‰ª§Ë°åÈáåÂåÖÂê´Â§¥Êñá‰ª∂" class="headerlink" title="Âú®ÂëΩ‰ª§Ë°åÈáåÂåÖÂê´Â§¥Êñá‰ª∂"></a>Âú®ÂëΩ‰ª§Ë°åÈáåÂåÖÂê´Â§¥Êñá‰ª∂</h2><p><code>gcc -include stdio.h</code><br>ÂèØ‰ª•Ëá™Â∑±ËÆæÁΩÆÁªü‰∏ÄÁöÑÂ§¥Êñá‰ª∂ÔºåÂåÖÂê´ÈÄöÁî®ÁöÑ‰∏Ä‰∫õÂ§¥Êñá‰ª∂Ôºå‰æõÁºñËØëÊó∂‰ΩøÁî®„ÄÇÔºàÂÅ∑ÊáíÁöÑÂÅöÊ≥ïÔºâ</p>
<h1 id="MakefileÁöÑ‰ΩøÁî®"><a href="#MakefileÁöÑ‰ΩøÁî®" class="headerlink" title="MakefileÁöÑ‰ΩøÁî®"></a>MakefileÁöÑ‰ΩøÁî®</h1><p>‰∏Ä‰∏™Âü∫Êú¨ÁöÑmakefileÔºö<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">P=program_name</span><br><span class="line">OBJECTS=</span><br><span class="line">CFLAGS = -g -Wall -O3</span><br><span class="line">LDLIBS=</span><br><span class="line">CC=c99</span><br><span class="line">$(P): $(OBJECTS)</span><br></pre></td></tr></table></figure></p>
<p>$(var) ËÆæÁΩÆÂèòÈáè<br>$@ ËøîÂõûÂÆåÊï¥ÁöÑÁõÆÊ†áÊñá‰ª∂Âêç<br>$* ‰∏çÂ∏¶Êñá‰ª∂ÂêçÂêéÁºÄÁöÑËæìÂá∫Êñá‰ª∂<br>$&lt; ÂΩìÂâçÁõÆÊ†áÁöÑÊñá‰ª∂ÂêçÁß∞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">target: dependencies</span><br><span class="line">    script</span><br></pre></td></tr></table></figure></p>
<p>‚Ä¶ÂÖ≥‰∫émakeÁöÑ‰ΩøÁî®ÊúâÂæÖË°•ÂÖÖ</p>
<h1 id="Here-Documents-amp-Compiling-from-stdin"><a href="#Here-Documents-amp-Compiling-from-stdin" class="headerlink" title="Here Documents &amp; Compiling from stdin"></a>Here Documents &amp; Compiling from stdin</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Â¶Ç‰ΩïÈÅøÂÖç‰ΩøÁî®gotoËØ≠Âè•]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/17/%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E4%BD%BF%E7%94%A8goto%E8%AF%AD%E5%8F%A5/</url>
      <content type="html"><![CDATA[<h2 id="setjmp-longjmp"><a href="#setjmp-longjmp" class="headerlink" title="setjmp()/longjmp()"></a>setjmp()/longjmp()</h2><p><code>ÈùûÂ±ÄÈÉ®Ë∑≥ËΩ¨ËØ≠Âè•</code>: setjmpÂíålongjmpÂáΩÊï∞„ÄÇ<br>ÈùûÂ±ÄÈÉ®Êåá‰∏çÂÉèÊôÆÈÄöCËØ≠Ë®ÄgotoÔºåËØ≠Âè•Âú®‰∏Ä‰∏™ÂáΩÊï∞ÂÜÖÂÆûÊñΩÁöÑË∑≥ËΩ¨ÔºåËÄåÊòØÂú®Ê†à‰∏äË∑≥ËøáËã•Âπ≤Ë∞ÉÁî®Â∏ßÔºåËøîÂõûÂà∞ÂΩìÂâçÂáΩÊï∞Ë∞ÉÁî®Ë∑ØÂæÑ‰∏äÁöÑÊüê‰∏Ä‰∏™ÂáΩÊï∞‰∏≠„ÄÇ<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;setjmp.h&gt;</span><br><span class="line">int setjmp(jmp_buf  env);   //ËøîÂõûÂÄºÔºöËã•Áõ¥Êé•Ë∞ÉÁî®ÂàôËøîÂõû0Ôºå</span><br><span class="line">void longjmp(jmp_buf env,int val);  //Ëã•‰ªélongjmpË∞ÉÁî®ËøîÂõûÂàôËøîÂõûÈùû0ÂÄº</span><br></pre></td></tr></table></figure></p>
<p>¬∑Âú®Â∏åÊúõËøîÂõûÂà∞ÁöÑ‰ΩçÁΩÆË∞ÉÁî®setjmpÔºåÊ≠§‰ΩçÁΩÆÂú®mainÂáΩÊï∞‰∏≠ÔºåÂõ†‰∏∫Áõ¥Êé•Ë∞ÉÁî®ËØ•ÂáΩÊï∞ÔºåÊâÄ‰ª•ÂÖ∂ËøîÂõûÂÄº‰∏∫0<br>setjmpÂèÇÊï∞evnÁöÑÁ±ªÂûãÊòØ‰∏Ä‰∏™ÁâπÊÆäÁöÑÁ±ªÂûãjmp_bufÔºåËøô‰∏ÄÊï∞ÊçÆÁ±ªÂûãÊòØÊüêÁßçÂΩ¢ÂºèÁöÑÊï∞ÁªÑÔºåÂÖ∂‰∏≠Â≠òÊîæÂú®Ë∞ÉÁî®longjmpÊó∂ËÉΩÁî®Êù•ÊÅ¢Â§çÊ†àÁä∂ÊÄÅÁöÑÊâÄÊúâ‰ø°ÊÅØ„ÄÇÂõ†‰∏∫ÈúÄË¶ÅÂú®Âè¶‰∏Ä‰∏™ÂáΩÊï∞‰∏≠ÂºïÁî®envÂèòÈáèÔºåÊâÄ‰ª•ËßÑËåÉÁöÑÂ§ÑÁêÜÊñπÂºèÊòØÂ∞ÜenvÂèòÈáèÂÆö‰πâ‰∏∫ÂÖ®Â±ÄÂèòÈáè„ÄÇ<br>¬∑ÂΩìÊ£ÄÊü•Âà∞‰∏Ä‰∏™ÈîôËØØÊó∂,Âàô‰ª•‰∏§‰∏™ÂèÇÊï∞Ë∞ÉÁî®longjmpÂáΩÊï∞ÔºåÁ¨¨‰∏Ä‰∏™Â∞±ÊòØÂú®Ë∞ÉÁî®setjmpÊó∂ÊâÄÁî®ÁöÑenvÔºåÁ¨¨‰∫å‰∏™ÂèÇÊï∞ÊòØÂÖ∑ÊúâÈùû0ÂÄºÁöÑvalÔºåÂÆÉÂ∞ÜÊàê‰∏∫‰ªésetjmpÂ§ÑËøîÂõûÁöÑÂÄº„ÄÇ‰ΩøÁî®Á¨¨‰∫å‰∏™ÂèÇÊï∞ÁöÑÂéüÂõ†ÊòØÂØπ‰∫é‰∏Ä‰∏™setjmpÂèØ‰ª•ÊúâÂ§ö‰∏™longjmp„ÄÇ</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ÁâπÂÆö‰∏§Êï∞‰πãÂíåÊ±Ç‰∏ãÊ†á]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/15/%E7%89%B9%E5%AE%9A%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E6%B1%82%E4%B8%8B%E6%A0%87/</url>
      <content type="html"><![CDATA[<h2 id="ÈóÆÈ¢ò"><a href="#ÈóÆÈ¢ò" class="headerlink" title="ÈóÆÈ¢ò"></a>ÈóÆÈ¢ò</h2><p><code>InputÔºönumbers={2, 7, 11, 15}, target=9
Output: index1=1, index2=2</code></p>
<h2 id="ÊñπÊ°à"><a href="#ÊñπÊ°à" class="headerlink" title="ÊñπÊ°à"></a>ÊñπÊ°à</h2><p>Áî®‰∏Ä‰∏™ÂìàÂ∏åË°®ÔºåÂ≠òÂÇ®ÊØè‰∏™Êï∞ÂØπÂ∫îÁöÑ‰∏ãÊ†áÔºåÂ§çÊùÇÂ∫¶O(n)</p>
<h2 id="‰ª£Á†Å"><a href="#‰ª£Á†Å" class="headerlink" title="‰ª£Á†Å"></a>‰ª£Á†Å</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    vector&lt;int&gt; twoSum(vector&lt;int&gt; &amp;nums, int target) &#123;</span><br><span class="line">        unordered_map&lt;int, int&gt; mapping;</span><br><span class="line">        vector&lt;int&gt; result;</span><br><span class="line">        for (int i = 0; i &lt; nums.size(); i++) &#123;</span><br><span class="line">            mapping[nums[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        for (int i = 0; i &lt; nums.size(); i++) &#123;</span><br><span class="line">           const int gap = target - nums[i];</span><br><span class="line">           if (mapping.find(gap) != mapping.end() &amp;&amp; mapping[gap] &gt; i) &#123;</span><br><span class="line">                result.push_back(i + 1);</span><br><span class="line">                result.push_back(mapping[gap] + 1);</span><br><span class="line">                break;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ÈÄöËøáËß£ÈáäÂô®ÊâßË°åÁ®ãÂ∫è]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/12/%E9%80%9A%E8%BF%87%E8%A7%A3%E9%87%8A%E5%99%A8%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>Ëã•ÈÄöËøáËØ≠Ê≥ïÂàÜÊûêÂæóÂà∞ËØ≠Ê≥ïÂàÜÊûêÊ†ëÔºåËß£ÈáäÂô®Âè™ÈúÄË¶Å‰ªéÊäΩË±°ËØ≠Ê≥ïÊ†ëÁöÑÊ†πËäÇÁÇπÂºÄÂßãÈÅçÂéÜËØ•Ê†ëÁõ¥Âà∞Âè∂ËäÇÁÇπÔºåÂπ∂ËÆ°ÁÆóÂêÑËäÇÁÇπÁöÑÂÜÖÂÆπ‰æøÂèØÂæóÂà∞ÁªìÊûú„ÄÇ</p>
<h2 id="evalÊñπÊ≥ï"><a href="#evalÊñπÊ≥ï" class="headerlink" title="evalÊñπÊ≥ï"></a>evalÊñπÊ≥ï</h2><p>evalÊñπÊ≥ïÂ∞ÜËÆ°ÁÆó<code>‰ª•ËØ•ËäÇÁÇπ‰∏∫Ê†πÁöÑÂ≠êÊ†ëÂØπÂ∫îÁöÑËØ≠Âè•„ÄÅË°®ËææÂºèÂèäÂ≠êË°®ËææÂºè</code>ÔºåÂπ∂ËøîÂõûÊâßË°åÁªìÊûú„ÄÇ</p>
<h2 id="ÁéØÂ¢ÉÂØπË±°"><a href="#ÁéØÂ¢ÉÂØπË±°" class="headerlink" title="ÁéØÂ¢ÉÂØπË±°"></a>ÁéØÂ¢ÉÂØπË±°</h2><p>ÁéØÂ¢ÉÂØπË±°ÊòØ‰∏ÄÁßçÁî®‰∫éËÆ∞ÂΩïÂèòÈáèÂêçÁß∞‰∏éÂÄºÁöÑÂØπÂ∫îÂÖ≥Á≥ªÁöÑÊï∞ÊçÆÁªìÊûÑÔºåÂ∏∏‰ª•ÂìàÂ∏åË°®ÁöÑÂΩ¢ÂºèÂÆûÁé∞„ÄÇ<br>1„ÄÅÂΩìÁ®ãÂ∫è‰∏≠Âá∫Áé∞Êñ∞ÂèòÈáèÊó∂ÔºåÁî±ËØ•ÂèòÈáèÁöÑÂêçÁß∞‰∏éÂàùÂßãÂÄºÊûÑÊàêÁöÑÈîÆÂÄºÂØπÊ∑ªÂä†Âà∞ÂìàÂ∏åË°®Ôºõ<br>2„ÄÅ‰πãÂêéÈÅáÂà∞Ëøô‰∏ÄÂèòÈáèÊó∂ÔºåÁ®ãÂ∫èÂ∞ÜÊêúÁ¥¢ÂìàÂ∏åË°®Âπ∂ÂèñÂæóÂÆÉÁöÑÂÄºÔºõ<br>3„ÄÅÂÄºÁöÑÊõ¥Êñ∞Â∞ÜÊõ¥Êñ∞ÈîÆÂÄºÂØπ„ÄÇ</p>
<h2 id="‰ΩúÁî®Âüü‰∏éÁîüÂ≠òÂë®Êúü"><a href="#‰ΩúÁî®Âüü‰∏éÁîüÂ≠òÂë®Êúü" class="headerlink" title="‰ΩúÁî®Âüü‰∏éÁîüÂ≠òÂë®Êúü"></a>‰ΩúÁî®Âüü‰∏éÁîüÂ≠òÂë®Êúü</h2><p>scope<br>extent</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Â¶Ç‰ΩïÈòÖËØª‰ª£Á†Å]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/08/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<h2 id="Ë¶ÅÁü•ÈÅìÁöÑÈ´òÁ∫ßCÊï∞ÊçÆÁ±ªÂûã"><a href="#Ë¶ÅÁü•ÈÅìÁöÑÈ´òÁ∫ßCÊï∞ÊçÆÁ±ªÂûã" class="headerlink" title="Ë¶ÅÁü•ÈÅìÁöÑÈ´òÁ∫ßCÊï∞ÊçÆÁ±ªÂûã"></a>Ë¶ÅÁü•ÈÅìÁöÑÈ´òÁ∫ßCÊï∞ÊçÆÁ±ªÂûã</h2><h3 id="ÊåáÈíàÈÄöÂ∏∏ÁöÑÁî®Ê≥ï"><a href="#ÊåáÈíàÈÄöÂ∏∏ÁöÑÁî®Ê≥ï" class="headerlink" title="ÊåáÈíàÈÄöÂ∏∏ÁöÑÁî®Ê≥ï"></a>ÊåáÈíàÈÄöÂ∏∏ÁöÑÁî®Ê≥ï</h3><h4 id="ÂàõÂª∫ÈìæÂºèÊï∞ÊçÆÁªìÊûÑ"><a href="#ÂàõÂª∫ÈìæÂºèÊï∞ÊçÆÁªìÊûÑ" class="headerlink" title="ÂàõÂª∫ÈìæÂºèÊï∞ÊçÆÁªìÊûÑ"></a>ÂàõÂª∫ÈìæÂºèÊï∞ÊçÆÁªìÊûÑ</h4><h4 id="Êï∞ÊçÆÁªìÊûÑÁöÑÂä®ÊÄÅÂàÜÈÖç"><a href="#Êï∞ÊçÆÁªìÊûÑÁöÑÂä®ÊÄÅÂàÜÈÖç" class="headerlink" title="Êï∞ÊçÆÁªìÊûÑÁöÑÂä®ÊÄÅÂàÜÈÖç"></a>Êï∞ÊçÆÁªìÊûÑÁöÑÂä®ÊÄÅÂàÜÈÖç</h4><h4 id="ÂÆûÁé∞ÂºïÁî®Ë∞ÉÁî®"><a href="#ÂÆûÁé∞ÂºïÁî®Ë∞ÉÁî®" class="headerlink" title="ÂÆûÁé∞ÂºïÁî®Ë∞ÉÁî®"></a>ÂÆûÁé∞ÂºïÁî®Ë∞ÉÁî®</h4><h4 id="ËÆøÈóÆÂíåÈÅçÂéÜÊï∞ÊçÆÈõÜÂêà"><a href="#ËÆøÈóÆÂíåÈÅçÂéÜÊï∞ÊçÆÈõÜÂêà" class="headerlink" title="ËÆøÈóÆÂíåÈÅçÂéÜÊï∞ÊçÆÈõÜÂêà"></a>ËÆøÈóÆÂíåÈÅçÂéÜÊï∞ÊçÆÈõÜÂêà</h4><h4 id="‰º†ÈÄíÊï∞ÁªÑÂèÇÊï∞"><a href="#‰º†ÈÄíÊï∞ÁªÑÂèÇÊï∞" class="headerlink" title="‰º†ÈÄíÊï∞ÁªÑÂèÇÊï∞"></a>‰º†ÈÄíÊï∞ÁªÑÂèÇÊï∞</h4><h4 id="‰Ωú‰∏∫ÂáΩÊï∞ÁöÑÂºïÁî®"><a href="#‰Ωú‰∏∫ÂáΩÊï∞ÁöÑÂºïÁî®" class="headerlink" title="‰Ωú‰∏∫ÂáΩÊï∞ÁöÑÂºïÁî®"></a>‰Ωú‰∏∫ÂáΩÊï∞ÁöÑÂºïÁî®</h4><h4 id="‰Ωú‰∏∫ÂÖ∂‰ªñÂÄºÁöÑÂà´Âêç"><a href="#‰Ωú‰∏∫ÂÖ∂‰ªñÂÄºÁöÑÂà´Âêç" class="headerlink" title="‰Ωú‰∏∫ÂÖ∂‰ªñÂÄºÁöÑÂà´Âêç"></a>‰Ωú‰∏∫ÂÖ∂‰ªñÂÄºÁöÑÂà´Âêç</h4><h4 id="Ë°®Á§∫Â≠óÁ¨¶‰∏≤"><a href="#Ë°®Á§∫Â≠óÁ¨¶‰∏≤" class="headerlink" title="Ë°®Á§∫Â≠óÁ¨¶‰∏≤"></a>Ë°®Á§∫Â≠óÁ¨¶‰∏≤</h4><h4 id="Áõ¥Êé•ËÆøÈóÆÁ≥ªÁªüÂÜÖÂ≠ò"><a href="#Áõ¥Êé•ËÆøÈóÆÁ≥ªÁªüÂÜÖÂ≠ò" class="headerlink" title="Áõ¥Êé•ËÆøÈóÆÁ≥ªÁªüÂÜÖÂ≠ò"></a>Áõ¥Êé•ËÆøÈóÆÁ≥ªÁªüÂÜÖÂ≠ò</h4><h3 id="ÁªìÊûÑ‰Ωì"><a href="#ÁªìÊûÑ‰Ωì" class="headerlink" title="ÁªìÊûÑ‰Ωì"></a>ÁªìÊûÑ‰Ωì</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ÂØªÊâæÊú™ÊéíÂ∫èÊï∞ÁªÑÁöÑÊúÄÈïøËøûÁª≠Â∫èÂàó]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/08/%E5%AF%BB%E6%89%BE%E6%9C%AA%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</url>
      <content type="html"><![CDATA[<h3 id="ÈóÆÈ¢òÔºö"><a href="#ÈóÆÈ¢òÔºö" class="headerlink" title="ÈóÆÈ¢òÔºö"></a>ÈóÆÈ¢òÔºö</h3><p>[100, 4, 200, 1, 3, 2] ÊúÄÈïøËøûÁª≠Â∫èÂàóÔºö[1, 2, 3, 4]„ÄÇ<br>Â§çÊùÇÂ∫¶ÔºöO(n)</p>
<h3 id="ÊñπÊ≥ï‰∏Ä"><a href="#ÊñπÊ≥ï‰∏Ä" class="headerlink" title="ÊñπÊ≥ï‰∏Ä"></a>ÊñπÊ≥ï‰∏Ä</h3><p>ÂÖàÊéíÂ∫èÔºåÂ§çÊùÇÂ∫¶O(nlogn)„ÄÇ<br>Ë¶ÅÊ±ÇO(n)ÔºåÁî®ÂìàÂ∏åË°®„ÄÇÁî®‰∏Ä‰∏™ÂìàÂ∏åË°®ËÆ∞ÂΩïÊØè‰∏™ÂÖÉÁ¥†ÊòØÂê¶‰ΩøÁî®ÔºåÂØπÊØè‰∏™ÂÖÉÁ¥†ÔºåÂ∑≤ËØ•ÂÖÉÁ¥†‰∏∫‰∏≠ÂøÉÔºåÂêëÂ∑¶Âè≥Êâ©Âº†ÔºåÁõ¥Âà∞‰∏çËøûÁª≠‰∏∫Ê≠¢ÔºåËÆ∞ÂΩï‰∏ãÊúÄÈïøÁöÑÈïøÂ∫¶„ÄÇ<br><code>[unordered_map](http://www.cplusplus.com/reference/unordered_map/unordered_map/)</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">	int longestConsecutive(const vector&lt;int&gt; &amp;nums) &#123;</span><br><span class="line">		unordered_map&lt;int, bool&gt; used;</span><br><span class="line">		for (auto i : nums) used[i] = false;</span><br><span class="line"></span><br><span class="line">		int longest = 0;</span><br><span class="line"></span><br><span class="line">		for (auto i : nums) &#123;</span><br><span class="line">			if (nums[i]) continue;</span><br><span class="line"></span><br><span class="line">			int length = 1;</span><br><span class="line">			used[i] = true;</span><br><span class="line"></span><br><span class="line">			for (int j = i + 1; used.find(j) != used.end(); ++j) &#123;</span><br><span class="line">				used[j] = true;</span><br><span class="line">				++length;</span><br><span class="line">			&#125;</span><br><span class="line">			for (int j = i - 1; used.find(j) != used.end(); --j) &#123;</span><br><span class="line">				used[j] = true;</span><br><span class="line">				++length;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			longest = max(longest, length);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		return longest;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h3 id="ÊñπÊ≥ï‰∫åÔºöËÅöÁ±ªÊìç‰Ωú"><a href="#ÊñπÊ≥ï‰∫åÔºöËÅöÁ±ªÊìç‰Ωú" class="headerlink" title="ÊñπÊ≥ï‰∫åÔºöËÅöÁ±ªÊìç‰Ωú"></a>ÊñπÊ≥ï‰∫åÔºöËÅöÁ±ªÊìç‰Ωú</h3><p>¬∑ÂæÖË°•ÂÖÖ</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[‰∏§‰∏™Â∑≤ÊéíÂ∫èÊï∞ÁªÑÁöÑÁ¨¨KÂ§ßÂÖÉÁ¥†]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/07/%E4%B8%A4%E4%B8%AA%E5%B7%B2%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%ACK%E5%A4%A7%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<p><code>‰∏§‰∏™Â∑≤ÊéíÂ∫èÊï∞ÁªÑA[m]„ÄÅB[n]ÔºåÊ±Ç‰∏§ËÄÖÊâÄÊúâÂÖÉÁ¥†ÁöÑÁ¨¨kÂ§ßÁöÑÂÖÉÁ¥†</code></p>
<h3 id="ÊñπÊ≥ï‰∏Ä"><a href="#ÊñπÊ≥ï‰∏Ä" class="headerlink" title="ÊñπÊ≥ï‰∏Ä"></a>ÊñπÊ≥ï‰∏Ä</h3><p>Áõ¥Êé•merge‰∏§‰∏™Êï∞ÁªÑÔºåÁÑ∂ÂêéÊ±ÇÁ¨¨KÂ§ßÁöÑÂÖÉÁ¥†</p>
<h3 id="ÊñπÊ≥ï‰∫å"><a href="#ÊñπÊ≥ï‰∫å" class="headerlink" title="ÊñπÊ≥ï‰∫å"></a>ÊñπÊ≥ï‰∫å</h3><p>‰ΩøÁî®ËÆ°Êï∞Âô®hËÆ∞ÂΩïÂΩìÂâçÂ∑≤ÁªèÊâæÂà∞Á¨¨mÂ§ßÁöÑÂÖÉÁ¥†Ôºõ<br>‰ΩøÁî®‰∏§‰∏™ÊåáÈíàpAÂíåpBÔºåÂàÜÂà´ÊåáÂêëÊï∞ÁªÑAÂíåBÔºõ<br>Â¶ÇÊûúAÂΩìÂâçÂÖÉÁ¥†Â∞èÔºåpA++Ôºåm++;<br>Â¶ÇÊûúBÂΩìÂâçÂÖÉÁ¥†Â∞èÔºåpB++Ôºåm++;<br>ÂΩìm==kÔºåÂæóÂà∞Á≠îÊ°à„ÄÇ<br>O(k)Êó∂Èó¥ÔºåO(1)Á©∫Èó¥„ÄÇ<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">private:</span><br><span class="line">	static int find_kth(std::vector&lt;int&gt;::const_iterator A, int m,</span><br><span class="line">						std::vector&lt;int&gt;::const_iterator B, int n,</span><br><span class="line">						int k) &#123;</span><br><span class="line">        int i = 0;</span><br><span class="line">        int j = 0;</span><br><span class="line">        int h = 1;</span><br><span class="line">        </span><br><span class="line">        if (0 == m) return B[k - 1];</span><br><span class="line">        if (0 == n) return A[k - 1];</span><br><span class="line">        if (1 == k) return min(A[0], B[0]);</span><br><span class="line">        </span><br><span class="line">        while (i&lt;m &amp;&amp; j&lt;n) &#123;</span><br><span class="line">            if (A[i] &lt;= B[j]) &#123;</span><br><span class="line">                i++;</span><br><span class="line">                h++;</span><br><span class="line">                if (h == k) return A[i - 1];</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                j++;</span><br><span class="line">                h++;</span><br><span class="line">                if (h == k) return B[j - 1];</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="ÊñπÊ≥ï‰∏â"><a href="#ÊñπÊ≥ï‰∏â" class="headerlink" title="ÊñπÊ≥ï‰∏â"></a>ÊñπÊ≥ï‰∏â</h3><p><code>ÂÖÖÂàÜÂà©Áî®ÊúâÂ∫èÔºåÊØèÊ¨°ÊéíÈô§k/2‰∏™ÂÖÉÁ¥†Ôºå‰ΩøÁî®ÈÄíÂΩí</code><br>¬∑ÂΩìAÊàñB‰∏∫Á©∫Êó∂ÔºåÁõ¥Êé•ËøîÂõûB[k-1]ÊàñA[k-1]<br>¬∑ÂΩìk==1Êó∂ÔºåËøîÂõûmin(A[0], B[0])<br>¬∑ÂΩìA[k/2 - 1] == B[k/2 - 1]Êó∂ÔºåËøîÂõûA[k/2 - 1]ÊàñB[k/2 - 1]<br>ÂÅáËÆæAÂíåBÁöÑÂÖÉÁ¥†‰∏™Êï∞ÈÉΩÂ§ß‰∫ék/2Ôºå<br>¬∑if (A[k/2 - 1] &lt; B[k/2 - 1]) ÊéíÈô§AÊï∞ÁªÑÁöÑk/2‰∏™ÂÖÉÁ¥†„ÄÇ<br>¬∑else if (A[k/2 - 1] &gt; B[k/2 - 1]) ÊéíÈô§BÊï∞ÁªÑÁöÑk/2‰∏™ÂÖÉÁ¥†„ÄÇ<br>¬∑else ÊâæÂà∞‰∫ÜÁ¨¨kÂ§ßÁöÑÂÖÉÁ¥†ÔºåÁõ¥Êé•ËøîÂõûA[k/2 - 1]ÊàñB[k/2 - 1]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">	double findMedianSortedArrays(const vector&lt;int&gt;&amp; A, const vector&lt;int&gt;&amp; B) &#123;</span><br><span class="line">		const int m = A.size();</span><br><span class="line">		const int n = B.size();</span><br><span class="line">		int total = m + n;</span><br><span class="line"></span><br><span class="line">		if (total &amp; 0x1) &#123;</span><br><span class="line">			return find_kth(A.begin(), m,</span><br><span class="line">							B.begin(), n,</span><br><span class="line">							total/2 + 1);</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return (</span><br><span class="line">					find_kth(A.begin(), m,</span><br><span class="line">							B.begin(), n,</span><br><span class="line">							total/2) + </span><br><span class="line">					find_kth(A.begin(), m,</span><br><span class="line">							B.begin(),n,</span><br><span class="line">							total/2 + 1)</span><br><span class="line">					) / 2.0;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">	static int find_kth(std::vector&lt;int&gt;::const_iterator A, int m,</span><br><span class="line">						std::vector&lt;int&gt;::const_iterator B, int n,</span><br><span class="line">						int k) &#123;</span><br><span class="line">		if (m &gt; n) return find_kth(B, n, </span><br><span class="line">								   A, m, </span><br><span class="line">								   k);</span><br><span class="line">		if (m == 0) return *(B + k - 1);</span><br><span class="line">		if (k == 1) return min(*A, *B);</span><br><span class="line"></span><br><span class="line">		int ia = min(k/2, m);</span><br><span class="line">		int ib = k - ia;</span><br><span class="line">		if (*(A + ia - 1) &lt; *(B + ib - 1)) &#123;</span><br><span class="line">			return find_kth(A + ia, m - ia,</span><br><span class="line">				            B, n,</span><br><span class="line">				            k - ia);</span><br><span class="line">		&#125; else if (*(A + ia - 1) &gt; *(B + ib - 1)) &#123;</span><br><span class="line">			return find_kth(A, m,</span><br><span class="line">				            B + ib, n - ib,</span><br><span class="line">				            k - ib);</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return *(A + ia - 1);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Âæ™ÁéØÊúâÂ∫èÊï∞ÁªÑÁöÑÊü•Êâæ]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/04/%E5%BE%AA%E7%8E%AF%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E6%9F%A5%E6%89%BE/</url>
      <content type="html"><![CDATA[<h3 id="Âæ™ÁéØÊúâÂ∫èÊï∞ÁªÑÔºö"><a href="#Âæ™ÁéØÊúâÂ∫èÊï∞ÁªÑÔºö" class="headerlink" title="Âæ™ÁéØÊúâÂ∫èÊï∞ÁªÑÔºö"></a>Âæ™ÁéØÊúâÂ∫èÊï∞ÁªÑÔºö</h3><p><code>Êää‰∏Ä‰∏™ÊúâÂ∫èÊï∞ÁªÑ‰ªéÊüê‰∏™ÔºàÊú™Áü•Ôºâ‰ΩçÁΩÆÂ§ÑÊà™‰∏∫‰∏§ÊÆµÔºåÊääÂâç‰∏ÄÊÆµÊîæÂà∞Âêé‰∏ÄÊÆµÁöÑÂêéÈù¢ÔºàÊï∞ÁªÑÂÖÉÁ¥†‰∏§ÈÉ®ÂàÜÂàÜÂà´ÊúâÂ∫èÔºâ</code><br>ÈááÁî®‰∫åÂàÜÊü•ÊâæÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶Ë¶ÅÊ±ÇO(log n)</p>
<h3 id="‰∏ªË¶ÅÈöæÁÇπÔºö"><a href="#‰∏ªË¶ÅÈöæÁÇπÔºö" class="headerlink" title="‰∏ªË¶ÅÈöæÁÇπÔºö"></a>‰∏ªË¶ÅÈöæÁÇπÔºö</h3><p><code>‰∫åÂàÜÊü•ÊâæÊó∂Â∑¶Âè≥ËæπÁïåÁöÑÁ°ÆÂÆö</code><br>Á°ÆÂÆöÂàÜÂâ≤ÁÇπ‰πãÂêéÔºåÂâçÂçäÊÆµÂíåÂêéÂçäÊÆµ‰∏≠ÂøÖÁÑ∂Êúâ‰∏ÄÈÉ®ÂàÜÊúâÂ∫èÔºö<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if(nums[first] &lt;= nums[mid]) //ÂâçÂçäÈÉ®ÊúâÂ∫è</span><br><span class="line">&#123;</span><br><span class="line">//ÂâçÂçäÊÆµÊúâÂ∫èÊó∂ÔºåÂà§ÂÆötargetÊòØÂê¶Âú®ÂâçÂçäÊÆµ</span><br><span class="line">&#125;</span><br><span class="line">else //ÂêéÂçäÈÉ®ÊúâÂ∫è</span><br><span class="line">&#123;</span><br><span class="line">//ÂêéÂçäÊÆµÊúâÂ∫èÊó∂ÔºåÂà§ÂÆötargetÊòØÂê¶Âú®ÂêéÂçäÊÆµ</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>ÂÆåÊï¥‰ª£Á†ÅÔºö<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int search(vector&lt;int&gt;&amp; nums, int target) &#123;</span><br><span class="line">        int first = 0;</span><br><span class="line">        int last = nums.size();</span><br><span class="line">        </span><br><span class="line">        while (first != last) &#123;</span><br><span class="line">            const int mid = first + (last - first) / 2;</span><br><span class="line">            if (nums[mid] == target) return mid;</span><br><span class="line">            </span><br><span class="line">            if (nums[first] &lt;= nums[mid]) &#123;</span><br><span class="line">                if (nums[first] &lt;= target &amp;&amp; target &lt; nums[mid]) &#123;  // ÊîπËøõÔºöÂ∞Ütarget‰∏éfirstÁöÑÂà§Á≠âÁã¨Á´ãÂá∫Êù•</span><br><span class="line">                    last = mid;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    first = mid + 1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                if (nums[mid] &lt; target &amp;&amp; target &lt;= nums[last - 1]) &#123; // ÊîπËøõÔºöÂ∞Ütarget‰∏élast-1ÁöÑÂà§Á≠âÁã¨Á´ãÂá∫Êù•</span><br><span class="line">                    first = mid + 1;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    last = mid;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return -1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="Ëã•Êï∞ÁªÑ‰∏≠ÂÖÅËÆ∏Â≠òÂú®ÈáçÂ§çÂÖÉÁ¥†Ôºö"><a href="#Ëã•Êï∞ÁªÑ‰∏≠ÂÖÅËÆ∏Â≠òÂú®ÈáçÂ§çÂÖÉÁ¥†Ôºö" class="headerlink" title="Ëã•Êï∞ÁªÑ‰∏≠ÂÖÅËÆ∏Â≠òÂú®ÈáçÂ§çÂÖÉÁ¥†Ôºö"></a>Ëã•Êï∞ÁªÑ‰∏≠ÂÖÅËÆ∏Â≠òÂú®ÈáçÂ§çÂÖÉÁ¥†Ôºö</h2><p>nums[first] &lt;= nums[mid]Êó∂ÔºåÂà§Êñ≠ÂâçÂçäÊÆµÊúâÂ∫èÁöÑÂÅáËÆæ‰∏çÂÜçÊàêÁ´ã„ÄÇÂ¶Ç[2,3,4,2,2,2,2]„ÄÇ</p>
<h4 id="Ëß£ÂÜ≥ÔºöÊääÊù°‰ª∂ÊãÜÂàÜÂºÄ"><a href="#Ëß£ÂÜ≥ÔºöÊääÊù°‰ª∂ÊãÜÂàÜÂºÄ" class="headerlink" title="Ëß£ÂÜ≥ÔºöÊääÊù°‰ª∂ÊãÜÂàÜÂºÄ"></a>Ëß£ÂÜ≥ÔºöÊääÊù°‰ª∂ÊãÜÂàÜÂºÄ</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (nums[first] &lt; nums[mid]) &#123;</span><br><span class="line">	// Á°ÆÂÆöÂâçÂçäÊÆµÊúâÂ∫è</span><br><span class="line">&#125; else (nums[first] &gt; nums[mid]) &#123;</span><br><span class="line">	// Á°ÆÂÆöÂêéÂçäÊÆµÊúâÂ∫è</span><br><span class="line">&#125; else &#123;</span><br><span class="line">	// ++firstÔºåÂéªÈô§‰∏Ä‰∏™ÈáçÂ§ç</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[‰ªéÂ∑≤ÊéíÂ∫èÊï∞ÁªÑÂà†Èô§ÂÜó‰ΩôÂÖÉÁ¥†]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/04/%E4%BB%8E%E5%B7%B2%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E5%88%A0%E9%99%A4%E5%86%97%E4%BD%99%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ë¶ÅÊ±ÇÂÜó‰ΩôÂÖÉÁ¥†Ëá≥Â§ö‰∏∫N‰∏™„ÄÇ</span></span><br><span class="line"><span class="keyword">class</span> Solution &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (nums.size() &lt; = N) <span class="keyword">return</span> nums.size();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> index = N;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = N; i &lt; nums.size(); i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (nums[index - N] != nums[i]) &#123;</span><br><span class="line">				nums[index++] = nums[i];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> index;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Êñ∞ÁöÑÂºÄÂßã]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/03/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
      <content type="html"><![CDATA[<p>Âã§ÂÅöÁ¨îËÆ∞„ÄÅÂã§ËÆ∞ÂøÜ„ÄÇ</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://ValyrianSteel.github.io/Blog/Blog/2016/03/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
